<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDev.Text" xml:space="preserve">
    <value>后端: Dishonek
前端: BK 黑木先森
算法: LovEver
架构: 绒球帽
Vtbs.moe 协力: Simon
UI: i-mage 
UWP 开发: Misaka-L</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AboutDevTitle.Text" xml:space="preserve">
    <value>关于开发者</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AboutJoinUs" xml:space="preserve">
    <value>加入我们</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AboutOpenSourceProject.Text" xml:space="preserve">
    <value>使用了 RestSharp 作为请求类库
许可证: Apache LICENSE 2.0 http://www.apache.org/licenses/LICENSE-2.0
官方网站: https://restsharp.dev
Github 仓库: https://github.com/restsharp/RestSharp

使用了 LitJson 作为 Json 解析库
官方网站: https://litjson.net
Github 仓库: https://github.com/LitJSON/litjson</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AboutOpenSourceProjectTitle.Text" xml:space="preserve">
    <value>使用的开源组件</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AboutSpecialThanks.Text" xml:space="preserve">
    <value>感谢各位 dd 的使用和支持，没有你们的支持没有现在的我们
感谢 VTuber 们愿意将音乐授权给本站，没有你们也不会有本站</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AboutSpecialThanksTitle" xml:space="preserve">
    <value>特别感谢</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AboutTitle.Text" xml:space="preserve">
    <value>关于</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="AddTo.Text" xml:space="preserve">
    <value>添加到</value>
    <comment>使用: VTuber.xaml SongList.xaml</comment>
  </data>
  <data name="BiliBiliLink.Text" xml:space="preserve">
    <value>BiliBili</value>
    <comment>使用: VTuber.xaml</comment>
  </data>
  <data name="BuildVersion" xml:space="preserve">
    <value>构建版本: {0} {1}</value>
    <comment>使用: SettingsPage.xaml {0}=版本号 {1}=构建版本</comment>
  </data>
  <data name="CheckLog.Content" xml:space="preserve">
    <value>查看日志</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="ClearLog.Content" xml:space="preserve">
    <value>清空日志</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="ClickToJoinQQGroup.Content" xml:space="preserve">
    <value>点击加入 QQ 群组: 737972812</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="Home.Content" xml:space="preserve">
    <value>发现</value>
    <comment>使用: MainPage.xaml</comment>
  </data>
  <data name="HXDLink.Content" xml:space="preserve">
    <value>记住你们三说过你们要女装的</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="LikesMusic.Content" xml:space="preserve">
    <value>我喜欢的音乐</value>
    <comment>使用: MainPage.xaml</comment>
  </data>
  <data name="LogTitle.Text" xml:space="preserve">
    <value>日志</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="MyMusic.Content" xml:space="preserve">
    <value>我的音乐</value>
    <comment>使用: MainPage.xaml</comment>
  </data>
  <data name="MySubscrube.Content" xml:space="preserve">
    <value>我的主推</value>
    <comment>使用: MainPage.xaml</comment>
  </data>
  <data name="MySubscrubeTitle" xml:space="preserve">
    <value>我的主推 ({0})</value>
    <comment>使用: Subscribe.xaml {0}=主推数量</comment>
  </data>
  <data name="PlayAll.Text" xml:space="preserve">
    <value>全部播放</value>
    <comment>使用: VTuber.xaml SongList.xaml</comment>
  </data>
  <data name="Playing.Content" xml:space="preserve">
    <value>正在播放</value>
    <comment>使用: MainPage.xaml</comment>
  </data>
  <data name="PlayList" xml:space="preserve">
    <value>播放列表 ({0})</value>
    <comment>使用: MainPage.xaml {0}=播放列表歌曲数</comment>
  </data>
  <data name="PopularSong.Text" xml:space="preserve">
    <value>热门歌曲</value>
    <comment>使用: Home.xaml</comment>
  </data>
  <data name="PopularVTuber.Text" xml:space="preserve">
    <value>人气 VTuber</value>
    <comment>使用: Home.xaml</comment>
  </data>
  <data name="SearchPlaceholder.PlaceholderText" xml:space="preserve">
    <value>搜索歌曲 / VTuber / 歌单</value>
    <comment>使用: MainPage.xaml</comment>
  </data>
  <data name="SettingsTitle.Text" xml:space="preserve">
    <value>设置</value>
    <comment>使用: SettingsPage.xaml</comment>
  </data>
  <data name="Share.Text" xml:space="preserve">
    <value>分享</value>
    <comment>使用: VTuber.xaml SongList.xaml</comment>
  </data>
  <data name="SongList.Text" xml:space="preserve">
    <value>歌单</value>
    <comment>使用: Home.xaml Search.xaml</comment>
  </data>
  <data name="Twitter.Text" xml:space="preserve">
    <value>Twitter</value>
    <comment>使用: VTuber.xaml</comment>
  </data>
  <data name="VTuberGroup" xml:space="preserve">
    <value>所属: {0}</value>
    <comment>使用: VTuber.xaml {0}=Vtuber 所属</comment>
  </data>
  <data name="VTuberLang" xml:space="preserve">
    <value>语言: {0}</value>
    <comment>使用: VTuber.xaml {0}=Vtuber 语言</comment>
  </data>
  <data name="YoutubeLink.Text" xml:space="preserve">
    <value>Youtube</value>
    <comment>使用: VTuber.xaml</comment>
  </data>
</root>